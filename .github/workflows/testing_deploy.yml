name: Testing

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]
  workflow_dispatch:

permissions:
  contents: read

env:
  MAVEN_OPTS: -Xmx2g

jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./demo

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Run tests + JaCoCo check
        run: mvn -B -Dcoverage.threshold=0.60 clean verify

      - name: Upload JaCoCo HTML report (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-testing
          path: '**/target/site/jacoco'

      - name: Crear .env según rama
        run: |
          # Si la rama es main, usamos variables de producción. En cualquier otra rama usamos testing.
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            cat > .env <<EOF
            SPRING_DATASOURCE_URL=${{ secrets.PROD_SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.PROD_SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.PROD_SPRING_DATASOURCE_PASSWORD }}
            APP_PORT=${{ secrets.PROD_APP_PORT }}
            EOF
          else
            cat > .env <<EOF
            POSTGRES_USER=${{ secrets.TEST_POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.TEST_POSTGRES_DB }}
            POSTGRES_PORT=${{ secrets.TEST_POSTGRES_PORT }}
            SPRING_DATASOURCE_URL=${{ secrets.TEST_SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.TEST_SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.TEST_SPRING_DATASOURCE_PASSWORD }}
            APP_PORT=${{ secrets.TEST_APP_PORT }}
            EOF
          fi

      - name: Trigger Render deploy via hook
        if: success()
        env:
          DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_TESTING }}
        run: |
          curl -s -X POST "${DEPLOY_HOOK_URL}"

